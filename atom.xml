<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🥔🍅</title>
  
  
  <link href="https://jagaimotomato.space/atom.xml" rel="self"/>
  
  <link href="https://jagaimotomato.space/"/>
  <updated>2023-03-06T15:36:31.800Z</updated>
  <id>https://jagaimotomato.space/</id>
  
  <author>
    <name>jagaimotomato</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小面</title>
    <link href="https://jagaimotomato.space/2023/03/06/20230306-%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/"/>
    <id>https://jagaimotomato.space/2023/03/06/20230306-%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/</id>
    <published>2023-03-06T15:29:00.000Z</published>
    <updated>2023-03-06T15:36:31.800Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img onerror="imgOnError(this);" data-fancybox="gallery" src="/../images/P30306-115512.jpg" alt="alt" data-caption="alt" loading="lazy"><br><img onerror="imgOnError(this);" data-fancybox="gallery" src="/../images/P30306-115523.jpg" alt="alt" data-caption="alt" loading="lazy"></p><ol><li><input checked="" disabled="" type="checkbox"> 看上去好吃</li><li><input checked="" disabled="" type="checkbox"> 其实不好吃</li><li><input checked="" disabled="" type="checkbox"> 高配火鸡面</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日常" scheme="https://jagaimotomato.space/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="朴素一餐" scheme="https://jagaimotomato.space/tags/%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/"/>
    
  </entry>
  
  <entry>
    <title>三月六日忆一九黄山行</title>
    <link href="https://jagaimotomato.space/2023/03/06/20230306-tourMemory/"/>
    <id>https://jagaimotomato.space/2023/03/06/20230306-tourMemory/</id>
    <published>2023-03-06T14:40:00.000Z</published>
    <updated>2023-03-06T15:28:03.887Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>&amp;emsp;&amp;emsp;今天偶然翻开手机相册，发现了一些老照片，就突然想写一点什么（就当作游记吧），<br><em>压抑了太久，发现了生活还是美好的。</em><br>&amp;emsp;&amp;emsp;那时已过三秋，正值十月，规划了两天一夜的行程，自己备好帐篷，吃喝,就准备出发了。<br><img onerror="imgOnError(this);" data-fancybox="gallery" src="/../images/P91003-134833(1).jpg" alt="alt 上山" data-caption="alt 上山" loading="lazy"><br>to be continued…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="回忆" scheme="https://jagaimotomato.space/categories/%E5%9B%9E%E5%BF%86/"/>
    
    
    <category term="旅游" scheme="https://jagaimotomato.space/tags/%E6%97%85%E6%B8%B8/"/>
    
    <category term="黄山" scheme="https://jagaimotomato.space/tags/%E9%BB%84%E5%B1%B1/"/>
    
  </entry>
  
  <entry>
    <title>螺蛳粉火锅</title>
    <link href="https://jagaimotomato.space/2023/03/04/20230304-%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/"/>
    <id>https://jagaimotomato.space/2023/03/04/20230304-%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/</id>
    <published>2023-03-04T13:00:00.000Z</published>
    <updated>2023-03-07T00:25:09.622Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><table><thead><tr><th></th><th><img src="/../images/10205e0276195dab4ed33b98da963b3.jpg"></th><th></th></tr></thead></table><p>今日与友人A去吃螺蛳粉火锅，solo 6(me) 4(A) 开，剩下个大企鹅跳水跟几个包子状的包子没有吃。<br>ps：吃到一半才想起来拍照</p><ol><li><input checked="" disabled="" type="checkbox"> 辣</li><li><input checked="" disabled="" type="checkbox"> 臭</li><li><input checked="" disabled="" type="checkbox"> 好吃</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日常" scheme="https://jagaimotomato.space/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="朴素一餐" scheme="https://jagaimotomato.space/tags/%E6%9C%B4%E7%B4%A0%E4%B8%80%E9%A4%90/"/>
    
    <category term="友人Z" scheme="https://jagaimotomato.space/tags/%E5%8F%8B%E4%BA%BAZ/"/>
    
  </entry>
  
  <entry>
    <title>今天情人节</title>
    <link href="https://jagaimotomato.space/2023/02/14/20230214/"/>
    <id>https://jagaimotomato.space/2023/02/14/20230214/</id>
    <published>2023-02-14T13:06:00.000Z</published>
    <updated>2023-03-05T13:09:32.999Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>跟我没有关系</p>    <div id="aplayer-KtzbLpbh" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="254115" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">教えて</summary>
    
    
    
    <category term="日常" scheme="https://jagaimotomato.space/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="灌水" scheme="https://jagaimotomato.space/tags/%E7%81%8C%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>leetcode</title>
    <link href="https://jagaimotomato.space/2022/08/06/leetcode/"/>
    <id>https://jagaimotomato.space/2022/08/06/leetcode/</id>
    <published>2022-08-06T13:19:37.000Z</published>
    <updated>2023-03-05T10:51:25.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h3><ul><li>给定一个整数数组<code>nums</code>和一个整数目标值<code>target</code>，请你在该数组中找出和为目标值的那两个整数，并返回它们的数组下标。</li><li>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</li><li>你可以按任意顺序返回答案。</li></ul><p>输入：nums &#x3D; [2,7,11,15], target &#x3D; 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] &#x3D;&#x3D; 9 ，返回 [0, 1] 。</p><h4 id="my-answer"><a href="#my-answer" class="headerlink" title="my answer"></a>my answer</h4><iframe id="cp_embed_oNqdMBQ" src="//codepen.io/takoyakiccc/embed/oNqdMBQ?height=350&theme-id=light&slug-hash=oNqdMBQ&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h4 id="最佳解法"><a href="#最佳解法" class="headerlink" title="最佳解法"></a>最佳解法</h4><iframe id="cp_embed_vYRjajo" src="//codepen.io/takoyakiccc/embed/vYRjajo?height=350&theme-id=light&slug-hash=vYRjajo&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="两数相加"><a href="#两数相加" class="headerlink" title="两数相加"></a>两数相加</h3><ul><li>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。请你将两个数相加，并以相同形式返回一个表示和的链表。  你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</li></ul><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><p><img onerror="imgOnError(this);" data-fancybox="gallery" src="/images/leetcode/2.jpg" alt="img.png" data-caption="img.png" loading="lazy"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></table></figure><h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></table></figure><h4 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></table></figure><h4 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h4><ul><li>每个链表中的节点数在范围 [1, 100] 内</li><li>0 &lt;&#x3D; Node.val &lt;&#x3D; 9</li><li>题目数据保证列表表示的数字不含前导零</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// leetcode02 两数相加 -- 链表</span></span><br><span class="line"><span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">value <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">prev *node</span><br><span class="line">next *node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> linkedList <span class="keyword">struct</span> &#123;</span><br><span class="line">head *node</span><br><span class="line">tail *node</span><br><span class="line">length <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewLinkedList</span><span class="params">()</span></span> *linkedList &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;linkedList&#123;</span><br><span class="line">length: <span class="number">0</span>,</span><br><span class="line">head: <span class="literal">nil</span>,</span><br><span class="line">tail: <span class="literal">nil</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> Size() <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> l.length</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> IsEmpty() <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">return</span> l.Size() == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> push(value <span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">n := node&#123;</span><br><span class="line">prev: l.tail,</span><br><span class="line">next: <span class="literal">nil</span>,</span><br><span class="line">value: value,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> l.tail == <span class="literal">nil</span> &#123;</span><br><span class="line">l.head, l.tail = &amp;n, &amp;n</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l.tail.next = &amp;n</span><br><span class="line">l.tail = &amp;n</span><br><span class="line">&#125;</span><br><span class="line">l.length++</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> Insert(index <span class="type">int</span>, value <span class="keyword">interface</span>&#123;&#125;) <span class="type">error</span> &#123;</span><br><span class="line">size := l.Size()</span><br><span class="line"><span class="keyword">if</span> index &lt; <span class="number">0</span> || index &gt; size &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;index out of range, index:%d, len:%d&quot;</span>, index, size)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> index == size &#123;</span><br><span class="line">l.push(value)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l.linkBefore(value, l.getElement(index))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// linkBefore inserts val before non-null element e.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> linkBefore(value <span class="keyword">interface</span>&#123;&#125;, n *node) &#123;</span><br><span class="line">newElement := node&#123;</span><br><span class="line">prev:  <span class="literal">nil</span>,</span><br><span class="line">next:  n,</span><br><span class="line">value: value,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> n != <span class="literal">nil</span> &#123;</span><br><span class="line">newElement.prev = n.prev</span><br><span class="line"><span class="keyword">if</span> n.prev != <span class="literal">nil</span> &#123;</span><br><span class="line">n.prev.next = &amp;newElement</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l.head = &amp;newElement</span><br><span class="line">&#125;</span><br><span class="line">n.prev = &amp;newElement</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l.head, l.tail = &amp;newElement, &amp;newElement</span><br><span class="line">&#125;</span><br><span class="line">l.length++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> getElement(index <span class="type">int</span>) *node &#123;</span><br><span class="line">size := l.Size()</span><br><span class="line"><span class="keyword">var</span> n *node</span><br><span class="line"><span class="keyword">if</span> index &lt; (size &gt;&gt; <span class="number">1</span>) &#123;</span><br><span class="line">n = l.head</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; index; i++ &#123;</span><br><span class="line">n = n.next</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">n = l.tail</span><br><span class="line"><span class="keyword">for</span> i := size - <span class="number">1</span>; i &gt; index ; i-- &#123;</span><br><span class="line">n = n.prev</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> Remove(index <span class="type">int</span>) (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line">size := l.Size()</span><br><span class="line"><span class="keyword">if</span> index &lt; <span class="number">0</span> || index &gt;= size &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;index out of range, index:%d, len:%d&quot;</span>, index, size)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> l.unlink(l.getElement(index)), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// unlink removes the specified element e in this list.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> unlink(n *node) <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == n &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">retValue := n.value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == n.prev &#123;</span><br><span class="line">l.head = n.next</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">n.prev.next = n.next</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == n.next &#123;</span><br><span class="line">l.tail = n.prev</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">n.next.prev = n.prev</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.prev, n.next, n.value = <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">l.length--</span><br><span class="line"><span class="keyword">return</span> retValue</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linkedList)</span></span> Iterator() (<span class="function"><span class="keyword">func</span><span class="params">()</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">bool</span>), <span class="type">bool</span>) &#123;</span><br><span class="line">n := l.head</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">bool</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> element <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> n != <span class="literal">nil</span> &#123;</span><br><span class="line">element = n.value</span><br><span class="line">n = n.next</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">element = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> element, n != <span class="literal">nil</span></span><br><span class="line">&#125;, n != <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ll *linkedList)</span></span> Get(index <span class="type">int</span>) (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line">size := ll.Size()</span><br><span class="line"><span class="keyword">if</span> index &lt; <span class="number">0</span> || index &gt;= size &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;index out of range, index:%d, len:%d&quot;</span>, index, size)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ll.getElement(index).value, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">first := NewLinkedList()</span><br><span class="line">first.push(<span class="number">2</span>)</span><br><span class="line">first.push(<span class="number">4</span>)</span><br><span class="line">first.push(<span class="number">3</span>)</span><br><span class="line">second := NewLinkedList()</span><br><span class="line">second.push(<span class="number">5</span>)</span><br><span class="line">second.push(<span class="number">6</span>)</span><br><span class="line">second.push(<span class="number">4</span>)</span><br><span class="line">size := first.Size()</span><br><span class="line">newLL := NewLinkedList()</span><br><span class="line"><span class="keyword">var</span> current, ten <span class="type">int</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; size; i++ &#123;</span><br><span class="line">firstV, _ := first.Get(i)</span><br><span class="line">secondV, _ := second.Get(i)</span><br><span class="line">sum := firstV.(<span class="type">int</span>) + secondV.(<span class="type">int</span>)</span><br><span class="line"><span class="keyword">if</span> ten != <span class="number">0</span> &#123;</span><br><span class="line">sum += ten</span><br><span class="line">ten = <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> sum &gt;= <span class="number">10</span> &#123;</span><br><span class="line">current = sum % <span class="number">10</span></span><br><span class="line">ten = sum / <span class="number">10</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">current = sum</span><br><span class="line">&#125;</span><br><span class="line">newLL.push(current)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ten != <span class="number">0</span> &#123;</span><br><span class="line">newLL.push(ten)</span><br><span class="line">&#125;</span><br><span class="line">it, hasNext := newLL.Iterator()</span><br><span class="line"><span class="keyword">var</span> v <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> hasNext &#123;</span><br><span class="line">v, hasNext = it()</span><br><span class="line">fmt.Printf(<span class="string">&quot;    Value: %v\n&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="无重复字符的最长子串"><a href="#无重复字符的最长子串" class="headerlink" title="无重复字符的最长子串"></a>无重复字符的最长子串</h3><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</p><p> </p><p>示例 1:</p><p>输入: s &#x3D; “abcabcbb”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。<br>示例 2:</p><p>输入: s &#x3D; “bbbbb”<br>输出: 1<br>解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。<br>示例 3:</p><p>输入: s &#x3D; “pwwkew”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。</p><p>提示：</p><p>0 &lt;&#x3D; s.length &lt;&#x3D; 5 * 104<br>s 由英文字母、数字、符号和空格组成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找出无重复 最长子串</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(str <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(str) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">strMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">max <span class="type">int</span></span><br><span class="line">left <span class="type">int</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(str); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> value, ok := strMap[<span class="type">string</span>(str[i])]; ok &#123; <span class="comment">// i=3 4 5</span></span><br><span class="line">left = compare(left, value + <span class="number">1</span>) <span class="comment">// value=0 left=1 left=2 left=3</span></span><br><span class="line">&#125;</span><br><span class="line">strMap[<span class="type">string</span>(str[i])] = i   <span class="comment">// 0   a-0 1  b-1 c-2 i=6 d-6</span></span><br><span class="line">max = compare(max, i - left + <span class="number">1</span>)<span class="comment">// 1 2 3 4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">compare</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&quot;abcabcd&quot;</span></span><br><span class="line">solution(name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">刷题</summary>
    
    
    
    <category term="算法" scheme="https://jagaimotomato.space/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="https://jagaimotomato.space/categories/%E7%AE%97%E6%B3%95/leetcode/"/>
    
    <category term="js" scheme="https://jagaimotomato.space/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>npm</title>
    <link href="https://jagaimotomato.space/2022/08/06/npm/"/>
    <id>https://jagaimotomato.space/2022/08/06/npm/</id>
    <published>2022-08-06T07:17:23.000Z</published>
    <updated>2023-03-05T10:51:25.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>npm config set registry links</p><ul><li><code>npm config set registry https://npmmirror.com/mirrors/</code></li></ul><p>npm初始registry：<a href="https://registry.npmjs.org/">https://registry.npmjs.org/</a></p><ul><li><code>npm config set registry https://registry.npmjs.org/</code></li></ul><p>开源镜像: <a href="https://npmmirror.com/mirrors/">https://npmmirror.com/mirrors/</a><br>Node.js 镜像: <a href="https://npmmirror.com/mirrors/node/">https://npmmirror.com/mirrors/node/</a><br>alinode 镜像: <a href="https://npmmirror.com/mirrors/alinode/">https://npmmirror.com/mirrors/alinode/</a><br>ChromeDriver 镜像: <a href="https://npmmirror.com/mirrors/chromedriver/">https://npmmirror.com/mirrors/chromedriver/</a><br>OperaDriver 镜像: <a href="https://npmmirror.com/mirrors/operadriver/">https://npmmirror.com/mirrors/operadriver/</a><br>Selenium 镜像: <a href="https://npmmirror.com/mirrors/selenium/">https://npmmirror.com/mirrors/selenium/</a><br>electron 镜像: <a href="https://npmmirror.com/mirrors/electron/">https://npmmirror.com/mirrors/electron/</a></p>]]></content>
    
    
    <summary type="html">npm的镜像链接</summary>
    
    
    
    <category term="frontend" scheme="https://jagaimotomato.space/categories/frontend/"/>
    
    <category term="包管理工具" scheme="https://jagaimotomato.space/categories/frontend/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="npm" scheme="https://jagaimotomato.space/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>几种经典数组排序方法</title>
    <link href="https://jagaimotomato.space/2022/08/02/%E5%87%A0%E7%A7%8D%E7%BB%8F%E5%85%B8%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
    <id>https://jagaimotomato.space/2022/08/02/%E5%87%A0%E7%A7%8D%E7%BB%8F%E5%85%B8%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</id>
    <published>2022-08-02T03:58:44.000Z</published>
    <updated>2023-03-05T10:51:25.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3></li></ol><iframe id="cp_embed_rNdJLLq" src="//codepen.io/takoyakiccc/embed/rNdJLLq?height=350&theme-id=light&slug-hash=rNdJLLq&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><ol start="2"><li><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3></li></ol><iframe id="cp_embed_WNzMxqg" src="//codepen.io/takoyakiccc/embed/WNzMxqg?height=350&theme-id=light&slug-hash=WNzMxqg&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><ol start="3"><li><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3></li></ol><ul><li>对于基本有序的数组最好用 稳定<iframe id="cp_embed_gOevwyZ" src="//codepen.io/takoyakiccc/embed/gOevwyZ?height=350&theme-id=light&slug-hash=gOevwyZ&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></li></ul><ol start="4"><li><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3></li></ol><ul><li>优化版插排<iframe id="cp_embed_KKoQWXj" src="//codepen.io/takoyakiccc/embed/KKoQWXj?height=350&theme-id=light&slug-hash=KKoQWXj&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></li></ul><ol start="5"><li><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3></li></ol><iframe id="cp_embed_XWEZgzO" src="//codepen.io/takoyakiccc/embed/XWEZgzO?height=350&theme-id=light&slug-hash=XWEZgzO&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="350" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><ol start="6"><li><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3></li></ol><iframe id="cp_embed_vYRdZPg" src="//codepen.io/takoyakiccc/embed/vYRdZPg?height=400&theme-id=light&slug-hash=vYRdZPg&default-tab=js&embed-version=2" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="排序时间复杂度"><a href="#排序时间复杂度" class="headerlink" title="排序时间复杂度"></a>排序时间复杂度</h3><p><img onerror="imgOnError(this);" data-fancybox="gallery" src="/images/sort.jpg" alt="img.png" data-caption="img.png" loading="lazy"></p>]]></content>
    
    
    <summary type="html">一些数组排序的经典方法</summary>
    
    
    
    <category term="算法" scheme="https://jagaimotomato.space/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="js" scheme="https://jagaimotomato.space/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="https://jagaimotomato.space/2022/08/01/post-test/"/>
    <id>https://jagaimotomato.space/2022/08/01/post-test/</id>
    <published>2022-08-01T08:13:57.000Z</published>
    <updated>2023-03-05T12:31:18.102Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="我的博客开张啦"><a href="#我的博客开张啦" class="headerlink" title="我的博客开张啦"></a>我的博客开张啦</h3>]]></content>
    
    
    <summary type="html">灌水</summary>
    
    
    
    <category term="日常" scheme="https://jagaimotomato.space/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="灌水" scheme="https://jagaimotomato.space/tags/%E7%81%8C%E6%B0%B4/"/>
    
  </entry>
  
</feed>
